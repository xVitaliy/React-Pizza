{"version":3,"sources":["assets/img/pizza-logo.svg","components/Button.jsx","components/Header.jsx","components/Categories.jsx","redux/filter.js","components/SortPopup.jsx","components/PizzaBlock.jsx","redux/pizza.js","components/LoadingBlock.jsx","redux/Cart.js","components/pages/Home.jsx","components/CartItem.jsx","assets/img/empty-cart.png","components/pages/Cart.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["Button","outline","children","className","onClick","classNames","propsTypes","PropTypes","func","Header","props","useSelector","state","cart","totalPrice","totalCount","to","width","src","logoSvg","alt","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Categories","activeCategory","items","onClickItem","list","map","item","i","memo","filterSlice","createSlice","name","initialState","category","sortBy","index","reducers","toggleCategory","action","payload","toggleSort","sort","type","actions","SortPopup","useState","visiblePopup","setVisiblePopup","activeItem","filters","sortRef","useRef","activeLabel","dispatch","useDispatch","handleOutsideClick","e","path","includes","current","useEffect","document","body","addEventListener","removeEventListener","ref","prevState","onSelectItem","PizzaBlock","id","imageUrl","types","sizes","price","onClickAddPizza","cartItemsLength","activeType","setActiveType","activeSize","setActiveSize","availableTypes","availableSizes","onSelectType","active","disabled","size","onSelectSize","obj","defaultProps","fetchPizza","createAsyncThunk","a","rejectWithValue","url","axios","get","response","status","Error","data","message","pizzaSlice","pizza","error","extraReducers","pending","fulfilled","rejected","LoadingBlock","speed","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","cartSlice","clearCart","removeCart","sum","addPizzaCart","newItems","arrayPizza","Object","values","flat","length","reduce","accum","onMinusItem","pop","onPlusItem","categoryNames","sortItems","Home","cartItems","onSelectCategory","useCallback","addPizzaToCart","Array","_","CartItem","pizzaPrice","window","confirm","Cart","addedPizzas","keys","key","console","log","cartImg","App","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","cartReducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ec2de81f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pizza-logo.56ac8703.svg\";","import React from 'react';\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ outline, children, className, onClick }) => {\r\n    return (\r\n        <button onClick={ onClick } className={ classNames('button', className, {\r\n            'button--outline': outline\r\n        }) }>{ children }</button>\r\n    );\r\n}\r\n\r\nButton.propsTypes = {\r\n    onClick: PropTypes.func\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport logoSvg from \"../assets/img/pizza-logo.svg\";\r\nimport Button from \"./Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Header = (props) => {\r\n    const { totalPrice, totalCount } = useSelector(state => state.cart)\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <Link to={ '/' }>\r\n                    <div className=\"header__logo\">\r\n                        <img width=\"38\" src={ logoSvg } alt=\"Pizza logo\" />\r\n                        <div>\r\n                            <h1>React Pizza</h1>\r\n                            <p>самая вкусная пицца во вселенной</p>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n\r\n                <div className=\"header__cart\">\r\n\r\n                    <Link to={ '/cart' }>\r\n                        <Button className={ 'button--cart' }>\r\n                            <span>{ totalPrice } ₽</span>\r\n                            <div className=\"button__delimiter\"></div>\r\n                            <svg\r\n                                width=\"18\"\r\n                                height=\"18\"\r\n                                viewBox=\"0 0 18 18\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path\r\n                                    d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                            </svg>\r\n                            <span>{ totalCount }</span>\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { memo, useState } from 'react';\r\n\r\nconst Categories = ({ activeCategory, items, onClickItem }) => {\r\n    const setSelectItem = (index) => {\r\n        onClickItem(index)\r\n    }\r\n\r\n    const list = items?.map((item, i) =>\r\n        <li className={ activeCategory === i ? 'active' : '' }\r\n            onClick={ () => setSelectItem(i) }\r\n            key={ `${ item }+${ i }` }>{ item }\r\n        </li>)\r\n\r\n    return (\r\n        <div className=\"categories\">\r\n            <ul>\r\n                { list }\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\nexport default memo(Categories);\r\n\r\n\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst filterSlice = createSlice({\r\n    name: 'filter',\r\n    initialState: {\r\n        category: 0,\r\n        sortBy: 'popular',\r\n        index: 0\r\n    },\r\n    reducers: {\r\n        toggleCategory(state, action) {\r\n            state.category = action.payload.index\r\n        },\r\n        toggleSort(state, action) {\r\n            state.index = action.payload.index\r\n            state.sortBy = action.payload.sort.type\r\n        }\r\n    }\r\n})\r\n\r\nexport const { toggleCategory, toggleSort } = filterSlice.actions\r\nexport default filterSlice.reducer","import React, { memo, useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toggleSort } from \"../redux/filter\";\r\n\r\nconst SortPopup = ({ items }) => {\r\n    const [ visiblePopup, setVisiblePopup ] = useState(false)\r\n    const activeItem = useSelector(state => state.filters.index)\r\n    const sortRef = useRef()\r\n    const activeLabel = items[activeItem].name\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const toggleVisiblePopup = () => {\r\n        setVisiblePopup(prevState => !prevState)\r\n    }\r\n\r\n    const handleOutsideClick = (e) => {\r\n        if (!e.path.includes(sortRef.current)) {\r\n            setVisiblePopup(false)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        document.body.addEventListener('click', handleOutsideClick)\r\n        return () => document.body.removeEventListener('click', handleOutsideClick)\r\n    }, [])\r\n\r\n    const onSelectItem = (index) => {\r\n        const sort = items[index]\r\n        dispatch(toggleSort({ index, sort }))\r\n        setVisiblePopup(false)\r\n    }\r\n    return (\r\n        <div ref={ sortRef } className=\"sort\">\r\n            <div className=\"sort__label\">\r\n                <svg\r\n                    className={ visiblePopup ? 'rotated' : '' }\r\n                    width=\"10\"\r\n                    height=\"6\"\r\n                    viewBox=\"0 0 10 6\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n                        fill=\"#2C2C2C\"\r\n                    />\r\n                </svg>\r\n\r\n                <b>Сортировка по:</b>\r\n                <span onClick={ toggleVisiblePopup }>{ activeLabel }</span>\r\n            </div>\r\n            { visiblePopup && <div className=\"sort__popup\">\r\n                <ul>\r\n                    { items && items.map((item, i) => <li onClick={ () => onSelectItem(i) }\r\n                                                          key={ `${ item }_${ i }` }\r\n                                                          className={ activeItem === i ? 'active' : '' }>\r\n                        { item.name }</li>)\r\n                    }\r\n                </ul>\r\n            </div> }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(SortPopup);","import React, { useState } from 'react';\r\nimport classNames from \"classnames\";\r\nimport PropTypes from 'prop-types'\r\nimport Button from \"./Button\";\r\n\r\nconst PizzaBlock = ({ id, imageUrl, name, types, sizes, price, onClickAddPizza, cartItemsLength }) => {\r\n    const [ activeType, setActiveType ] = useState(types[0])\r\n    const [ activeSize, setActiveSize ] = useState(0)\r\n    const availableTypes = [ 'тонкое', 'традиционное' ];\r\n    const availableSizes = [ 26, 30, 40 ];\r\n\r\n    const onSelectType = index => {\r\n        setActiveType(index)\r\n    }\r\n    const onSelectSize = index => {\r\n        setActiveSize(index)\r\n    }\r\n\r\n    const onAddPizza = () => {\r\n        const obj = {\r\n            id,\r\n            name,\r\n            imageUrl,\r\n            price,\r\n            size: availableSizes[activeSize],\r\n            type: availableTypes[activeType],\r\n        }\r\n        onClickAddPizza(obj)\r\n    }\r\n    return (\r\n        <div className=\"pizza-block\">\r\n            <img\r\n                className=\"pizza-block__image\"\r\n                src={ imageUrl }\r\n                alt=\"Pizza\"\r\n            />\r\n            <h4 className=\"pizza-block__title\">{ name }</h4>\r\n            <div className=\"pizza-block__selector\">\r\n                <ul>\r\n                    {\r\n                        availableTypes.map((type, index) => <li key={ type }\r\n                                                                onClick={ () => onSelectType(index) }\r\n                                                                className={ classNames({\r\n                                                                    active: activeType === index,\r\n                                                                    disabled: !types.includes(index),\r\n                                                                }) }>{ type }</li>)\r\n                    }\r\n                </ul>\r\n                <ul>\r\n                    {\r\n                        availableSizes.map((size, index) => <li key={ size }\r\n                                                                onClick={ () => onSelectSize(index) }\r\n                                                                className={ classNames({\r\n                                                                    active: activeSize === index,\r\n                                                                    disabled: !sizes.includes(size),\r\n                                                                }) }>{ size } см.</li>)\r\n                    }\r\n                </ul>\r\n            </div>\r\n            <div className=\"pizza-block__bottom\">\r\n                <div className=\"pizza-block__price\">от { price } ₽</div>\r\n                <Button onClick={ onAddPizza }\r\n                        className=\"button--add\" outline>\r\n                    <svg\r\n                        width=\"12\"\r\n                        height=\"12\"\r\n                        viewBox=\"0 0 12 12\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\r\n                            fill=\"white\"\r\n                        />\r\n                    </svg>\r\n                    <span>Добавить</span>\r\n                    { cartItemsLength && <i>{ cartItemsLength }</i> }\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nPizzaBlock.propTypes = {\r\n    name: PropTypes.string,\r\n    imageUrl: PropTypes.string,\r\n    price: PropTypes.number,\r\n    types: PropTypes.arrayOf(PropTypes.number),\r\n    sizes: PropTypes.arrayOf(PropTypes.number),\r\n}\r\n\r\nPizzaBlock.defaultProps = {\r\n    name: '---',\r\n    price: 0,\r\n    types: [],\r\n    sizes: []\r\n}\r\n\r\n\r\nexport default PizzaBlock;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchPizza = createAsyncThunk(\r\n    'pizza/fetchPizza',\r\n    async ({ category, sortBy, index }, { rejectWithValue }) => {\r\n        try {\r\n\r\n            const url = `/pizzas?${\r\n                category !== 0 ? `category=${ category - 1 }` : ''\r\n            }&_sort=${ sortBy }&_order=asc`\r\n\r\n            const response = await axios.get(url);\r\n\r\n            if (response.status !== 200) {\r\n                throw new Error('Sorry, server error')\r\n            }\r\n            return await response.data\r\n        } catch (e) {\r\n            return rejectWithValue(e.message)\r\n        }\r\n    }\r\n)\r\n\r\nconst pizzaSlice = createSlice({\r\n    name: 'pizza',\r\n    initialState: {\r\n        pizza: [],\r\n        status: null,\r\n        error: null\r\n    },\r\n    reducers: {},\r\n    extraReducers: {\r\n        [fetchPizza.pending]: (state) => {\r\n            state.status = 'loading'\r\n            state.error = null\r\n        },\r\n        [fetchPizza.fulfilled]: (state, action) => {\r\n            state.status = 'resolve'\r\n            state.pizza = action.payload\r\n        },\r\n        [fetchPizza.rejected]: (state, action) => {\r\n            state.status = 'rejected'\r\n            state.error = action.payload\r\n        }\r\n    }\r\n})\r\n\r\n// export const { setPizzas } = pizzaSlice.actions\r\nexport default pizzaSlice.reducer\r\n\r\n\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nfunction LoadingBlock() {\r\n    return (\r\n        <ContentLoader\r\n            className=\"pizza-block\"\r\n            speed={ 2 }\r\n            width={ 280 }\r\n            height={ 460 }\r\n            viewBox=\"0 0 280 460\"\r\n            backgroundColor=\"#f3f3f3\"\r\n            foregroundColor=\"#ecebeb\">\r\n            <circle cx=\"132\" cy=\"142\" r=\"115\" />\r\n            <rect x=\"0\" y=\"273\" rx=\"6\" ry=\"6\" width=\"280\" height=\"26\" />\r\n            <rect x=\"0\" y=\"310\" rx=\"6\" ry=\"6\" width=\"280\" height=\"84\" />\r\n            <rect x=\"0\" y=\"418\" rx=\"6\" ry=\"6\" width=\"91\" height=\"31\" />\r\n            <rect x=\"137\" y=\"408\" rx=\"25\" ry=\"25\" width=\"140\" height=\"46\" />\r\n        </ContentLoader>\r\n    );\r\n}\r\n\r\nexport default LoadingBlock;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        items: {},\r\n        totalPrice: 0,\r\n        totalCount: 0,\r\n    },\r\n    reducers: {\r\n        clearCart(state, action) {\r\n            state.items = {}\r\n            state.totalPrice = 0\r\n            state.totalCount = 0\r\n        },\r\n\r\n        removeCart(state, action) {\r\n            const { id, items, price } = action.payload\r\n            const sum = items * price\r\n            state.totalPrice -= sum\r\n            state.totalCount -= items\r\n            delete state.items[id]\r\n        },\r\n\r\n        addPizzaCart(state, action) {\r\n            const newItems = {\r\n                ...state.items,\r\n                [action.payload.id]: !state.items[action.payload.id]\r\n                    ? [ action.payload ]\r\n                    : [ ...state.items[action.payload.id], action.payload ]\r\n            }\r\n            state.items = newItems\r\n            const arrayPizza = Object.values(newItems).flat()\r\n            state.totalCount = arrayPizza.length\r\n            state.totalPrice = arrayPizza.reduce((accum, item) => accum + item.price, 0)\r\n        },\r\n\r\n        onMinusItem(state, action) {\r\n            const index = action.payload.id\r\n            if (state.items[index].length === 1) {\r\n                return\r\n            }\r\n            state.items[index].pop()\r\n            state.totalCount -= 1\r\n            state.totalPrice -= action.payload.price\r\n        }\r\n    }\r\n})\r\n\r\nexport const { addPizzaCart, clearCart, removeCart, onMinusItem, onPlusItem } = cartSlice.actions\r\nexport default cartSlice.reducer","import React, { useCallback, useEffect } from 'react';\r\nimport Categories from \"../Categories\";\r\nimport SortPopup from \"../SortPopup\";\r\nimport PizzaBlock from \"../PizzaBlock\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toggleCategory } from \"../../redux/filter\";\r\nimport { fetchPizza } from \"../../redux/pizza\";\r\nimport LoadingBlock from \"../LoadingBlock\";\r\nimport { addPizzaCart } from \"../../redux/Cart\";\r\n\r\nconst categoryNames = [ 'Все', 'Мясные', 'Вегетарианская', 'Гриль', 'Острые', 'Новое', 'Закрытые', ];\r\nconst sortItems = [\r\n    { name: 'популярности', type: 'popular' },\r\n    { name: 'цене', type: 'price' },\r\n    { name: 'алфавиту', type: 'name' }\r\n]\r\n\r\nconst Home = () => {\r\n    const items = useSelector(state => state.pizza.pizza)\r\n    const { status } = useSelector(state => state.pizza)\r\n    const cartItems = useSelector(state => state.cart.items)\r\n    const { category, sortBy, index } = useSelector(state => state.filters)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPizza({ category, sortBy, index }))\r\n    }, [ category, dispatch, index, sortBy ])\r\n\r\n    const onSelectCategory = useCallback((index) => {\r\n        dispatch(toggleCategory({ index }))\r\n\r\n    }, [ dispatch ])\r\n\r\n    const addPizzaToCart = (obj) => {\r\n        dispatch(addPizzaCart(obj))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"content__top\">\r\n                <Categories activeCategory={ category }\r\n                            onClickItem={ onSelectCategory }\r\n                            items={ categoryNames } />\r\n                <SortPopup items={ sortItems } />\r\n\r\n            </div>\r\n            <h2 className=\"content__title\">Все пиццы</h2>\r\n            <div className=\"content__items\">\r\n                { status === 'loading' && Array(12).fill(0).map((_, i) => <LoadingBlock key={ i } />) }\r\n                { items.map((item) => <PizzaBlock cartItemsLength={ cartItems[item.id] && cartItems[item.id].length }\r\n                                                  onClickAddPizza={ addPizzaToCart }\r\n                                                  key={ item.id } { ...item } />) }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n","import React from 'react';\r\nimport Button from \"./Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addPizzaCart, onMinusItem, onPlusItem, removeCart } from \"../redux/Cart\";\r\n\r\nconst CartItem = ({ id, name, type, size, items, price }) => {\r\n    const pizzaPrice = (items, price) => items * price\r\n    const dispatch = useDispatch()\r\n\r\n    const removeBlockPizza = () => {\r\n        if (window.confirm('Вы дествительно хотите удалить')) {\r\n            dispatch(removeCart({ id, items, price }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"cart__item\">\r\n            <div className=\"cart__item-img\">\r\n                <img\r\n                    className=\"pizza-block__image\"\r\n                    src=\"https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/b750f576-4a83-48e6-a283-5a8efb68c35d.jpg\"\r\n                    alt=\"Pizza\"\r\n                />\r\n            </div>\r\n            <div className=\"cart__item-info\">\r\n                <h3>{ name }</h3>\r\n                <p>{ type } тесто, { size } см.</p>\r\n            </div>\r\n            <div className=\"cart__item-count\">\r\n                <div onClick={ () => dispatch(onMinusItem({ id, name, type, size, items, price })) }\r\n                     className=\"button button--outline button--circle cart__item-count-minus\">\r\n                    <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\"\r\n                         xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                            fill=\"#EB5A1E\" />\r\n                        <path\r\n                            d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                            fill=\"#EB5A1E\" />\r\n                    </svg>\r\n\r\n                </div>\r\n                <b>{ items }</b>\r\n                <div onClick={ () => dispatch(addPizzaCart({ id, name, type, size, items, price })) }\r\n                     className=\"button button--outline button--circle cart__item-count-plus\">\r\n                    <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\"\r\n                         xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                            fill=\"#EB5A1E\" />\r\n                        <path\r\n                            d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                            fill=\"#EB5A1E\" />\r\n                    </svg>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"cart__item-price\">\r\n                <b>{ pizzaPrice(items, price) } ₽</b>\r\n            </div>\r\n            <div className=\"cart__item-remove\">\r\n\r\n                <Button className=\"button--circle\" outline onClick={ () => removeBlockPizza(id) }>\r\n                    <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\"\r\n                         xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                            fill=\"#EB5A1E\" />\r\n                        <path\r\n                            d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                            fill=\"#EB5A1E\" />\r\n                    </svg>\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CartItem;","export default __webpack_public_path__ + \"static/media/empty-cart.db905d1f.png\";","import React from 'react';\r\nimport CartItem from \"../CartItem\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { clearCart } from \"../../redux/Cart\";\r\nimport cartImg from '../../assets/img/empty-cart.png'\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../Button\";\r\n\r\nconst Cart = () => {\r\n    const dispatch = useDispatch()\r\n    const { totalPrice, totalCount, items } = useSelector(state => state.cart)\r\n    const addedPizzas = Object.keys(items).map(key => {\r\n        return items[key][0]\r\n    })\r\n\r\n    const onClearCart = () => {\r\n        if (window.confirm('Вы действительно хотите очистить корзину')) {\r\n            dispatch(clearCart())\r\n        }\r\n    }\r\n\r\n    const payForPizza = () => {\r\n        console.log(items)\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"container container--cart\">\r\n                {\r\n                    totalCount !== 0 ? <div className=\"cart\">\r\n                            <div className=\"cart__top\">\r\n                                <h2 className=\"content__title\">\r\n                                    <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\"\r\n                                         xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path\r\n                                            d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                                            stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                        <path\r\n                                            d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                                            stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                        <path\r\n                                            d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                                            stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                    </svg>\r\n                                    Корзина\r\n                                </h2>\r\n                                <div className=\"cart__clear\" onClick={ onClearCart }>\r\n                                    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\"\r\n                                         xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path d=\"M2.5 5H4.16667H17.5\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\"\r\n                                              strokeLinecap=\"round\"\r\n                                              strokeLinejoin=\"round\" />\r\n                                        <path\r\n                                            d=\"M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z\"\r\n                                            stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\"\r\n                                            strokeLinejoin=\"round\" />\r\n                                        <path d=\"M8.33337 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\"\r\n                                              strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                        <path d=\"M11.6666 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\"\r\n                                              strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                    </svg>\r\n\r\n                                    <span>Очистить корзину</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"content__items\">\r\n\r\n                                {\r\n                                    addedPizzas.map(pizza => <CartItem key={ pizza.id }\r\n                                                                       id={ pizza.id }\r\n                                                                       items={ items[pizza.id].length }\r\n                                                                       price={ items[pizza.id][0].price }\r\n                                                                       name={ pizza.name }\r\n                                                                       type={ pizza.type }\r\n                                                                       size={ pizza.size } />)\r\n\r\n                                }\r\n\r\n                            </div>\r\n                            <div className=\"cart__bottom\">\r\n                                <div className=\"cart__bottom-details\">\r\n                                    <span> Всего пицц: <b>{ totalCount } шт.</b> </span>\r\n                                    <span> Сумма заказа: <b>{ totalPrice } ₽</b> </span>\r\n                                </div>\r\n                                <div className=\"cart__bottom-buttons\">\r\n                                    <Link to=\"/\" className=\"button button--outline button--add go-back-btn\">\r\n                                        <svg width=\"8\" height=\"14\" viewBox=\"0 0 8 14\" fill=\"none\"\r\n                                             xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M7 13L1 6.93015L6.86175 1\" stroke=\"#D3D3D3\" strokeWidth=\"1.5\"\r\n                                                  strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                        </svg>\r\n\r\n                                        <span>Вернуться назад</span>\r\n                                    </Link>\r\n                                    <Button onClick={ payForPizza } className=\"button pay-btn\">\r\n                                        <span>Оплатить сейчас</span>\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        : <div className=\"cart cart--empty\">\r\n                            <h2>Корзина пустая <span>😕</span></h2>\r\n                            <p>\r\n                                Вероятней всего, вы не заказывали ещё пиццу.<br />\r\n                                Для того, чтобы заказать пиццу, перейди на главную страницу.\r\n                            </p>\r\n                            <img src={ cartImg } alt=\"Empty cart\" />\r\n                            <Link to=\"/\" className=\"button button--black\">\r\n                                <span>Вернуться назад</span>\r\n                            </Link>\r\n                        </div>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Cart;","import './scss/app.scss';\nimport Header from \"./components/Header\";\nimport Home from \"./components/pages/Home\";\nimport Cart from \"./components/pages/Cart\";\nimport { Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n    return (<div className=\"wrapper\">\n        <Header />\n        <div className=\"content\">\n            <Routes>\n                <Route path={ '/' } element={ <Home /> } />\n                <Route path={ '/cart' } element={ <Cart /> } />\n            </Routes>\n        </div>\n    </div>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport pizzaSlice from './pizza'\r\nimport filterSlice from './filter'\r\nimport cartReducer from './Cart'\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        filters: filterSlice,\r\n        pizza: pizzaSlice,\r\n        cart: cartReducer,\r\n    }\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={ store }>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>\n    ,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}